[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ntfy-api"
description = "A Python wrapper around the ntfy API."
authors = [
    { name = "Tanner Corcoran", email = "tannerbcorcoran@gmail.com" },
]
maintainers = [
    { name = "Tanner Corcoran", email = "tannerbcorcoran@gmail.com" },
]
dependencies = [
    "typing_extensions >= 4.5.0; python_version < '3.12'",
    "httpx",
    "websockets",
]
dynamic = [
    "version",
]
keywords = [
    "ntfy",
    "API",
    "nfty API",
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
    "Topic :: Utilities",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
]
readme = "README.md"

[project.license]
text = "Apache 2.0"

[project.urls]
Changelog = "https://github.com/tanrbobanr/ntfy-api/blob/main/CHANGELOG.md"
Documentation = "https://github.com/tanrbobanr/ntfy-api/blob/main/README.md"
Homepage = "https://github.com/tanrbobanr/ntfy-api"
Issues = "https://github.com/tanrbobanr/ntfy-api/issues"
Source = "https://github.com/tanrbobanr/ntfy-api"

[tool.setuptools.dynamic]
version = { attr = "ntfy_api.__package_info__.__version__" }

[tool.setuptools.package-data]
ntfy_api = ["py.typed"]

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
honor_noqa = true

[tool.black]
line-length = 79
target-version = ["py39", "py310", "py311", "py312", "py313"]
preview = true
enable-unstable-feature = [
    "string_processing",
    "wrap_long_dict_values_in_parens",
    "hug_parens_with_braces_and_square_brackets",
]

[tool.coverage.run]
branch = true
source = ["src"]
command_line = "-m pytest tests -vv"

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.tox]
requires = ["tox>=4"]
env_list = ["py39", "py310", "py311", "py312", "py313"]
skip_missing_interpreters = false

[tool.tox.env_run_base]
description = "Run tests (pytest, coverage, mypy)"
deps = ["-r requirements.txt", "-r requirements-test.txt"]
commands = [
    ["coverage", "run"],
    ["coverage", "report"],
    ["mypy", "src"],
]

# the below is required for running tests in parallel (prevents race
# condition in reading/writing the default .coverage file)
[tool.tox.env.py39.setenv]
COVERAGE_FILE = ".coverage.py39"

[tool.tox.env.py310.setenv]
COVERAGE_FILE = ".coverage.py310"

[tool.tox.env.py311.setenv]
COVERAGE_FILE = ".coverage.py311"

[tool.tox.env.py312.setenv]
COVERAGE_FILE = ".coverage.py312"

[tool.tox.env.py313.setenv]
COVERAGE_FILE = ".coverage.py313"
